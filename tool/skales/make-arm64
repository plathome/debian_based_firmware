#!/bin/sh
#
#  Copyright (c) 2013-2016, The Linux Foundation. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#      * Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials provided
#        with the distribution.
#      * Neither the name of The Linux Foundation nor the names of its
#        contributors may be used to endorse or promote products derived
#        from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#  IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ARM64 compiler wrapper

exe=$(readlink -f "$0")
META_ROOT=$(dirname "$exe")
META_ROOT=$(cd "$META_ROOT" && pwd)

if test -f "$META_ROOT/config.sh"
then
	. "$META_ROOT/config.sh"
fi
if test -f .skales/config
then
	. .skales/config
fi
export CROSS_COMPILE=$CROSS_COMPILE
KOBJ="${KOBJ:-../kobj}"

O_STR=
if ! test "$PWD" -ef "$KOBJ"
then
	O_STR="O=$KOBJ"
fi

die()
{
	echo ${1:-Failure}
	exit 1
}

if test -n "$ARCH" -a "$ARCH" != "arm64"
then
	die "Building for wrong arch"
fi

if test -z "$defconfig"
then
	# Simple case
	make ARCH=arm64 $O_STR "$@"
	exit $?
fi

# Copy the defconfig in and out of the kernel source tree as part of
# the build.

config=arch/arm64/configs/${defconfig}

# cp $config ../kobj/.config
make ARCH=arm64 $O_STR ${defconfig} || die "Build failure"
make ARCH=arm64 $O_STR "$@"
status=$?

make ARCH=arm64 $O_STR savedefconfig
mv $KOBJ/defconfig $config
exit $status
